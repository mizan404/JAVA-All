==========1========================
CREATE USER EID IDENTIFIED BY 123;

GRANT DBA TO EID;

=====================2 (A)=========================

CREATE TABLE DEPARTMENT(DEPT_ID NUMBER(3) PRIMARY KEY,
DEPT_NAME VARCHAR2(20) );

==========================2(B)=================
CREATE TABLE EMPLOYEE (EMP_ID NUMBER(3) PRIMARY KEY,
EMP_NAME VARCHAR2(20), MOBILE NUMBER(11) UNIQUE, 
SALARY NUMBER(8,2) CHECK (SALARY > 10000), JOINING_DATE DATE,
COUNTRY VARCHAR2(20) DEFAULT 'BD',
DEP_ID NUMBER(3) NOT NULL, FOREIGN KEY (DEP_ID)
references DEPARTMENT(DEPT_ID) );

========================2(C)======================

DESC EMPLOYEE;
DESC DEPARTMENT;

===================2(D)=============================

CREATE TABLE EMPLOYEE_BACKUP AS SELECT * FROM EMPLOYEE;

================TRIGGER FOR INSERT===================

CREATE OR REPLACE TRIGGER TI AFTER INSERT ON EMPLOYEE
FOR EACH ROW
DECLARE
BEGIN
INSERT INTO EMPLOYEE_BACKUP VALUES( :NEW.EMP_ID, :NEW.EMP_NAME, 
:NEW.MOBILE, :NEW.SALARY, :NEW.JOINING_DATE, :NEW.COUNTRY, :NEW.DEP_ID );
END;
/

======================TRIGGER FOR UPDATE===================

CREATE OR REPLACE TRIGGER TU AFTER UPDATE ON EMPLOYEE
FOR EACH ROW
DECLARE
BEGIN
UPDATE EMPLOYEE_BACKUP SET EMP_NAME= :NEW.EMP_NAME, 
MOBILE = :NEW.MOBILE, SALARY= :NEW.SALARY, JOINING_DATE= :NEW.JOINING_DATE, 
COUNTRY= :NEW.COUNTRY, DEPT_ID= :NEW.DEP_ID 
WHERE EMP_ID= :OLD.EMP_ID;
END;
/

==================TRIGGER FOR DELETE================

CREATE OR REPLACE TRIGGER TU AFTER UPDATE ON EMPLOYEE
FOR EACH ROW
DECLARE
BEGIN
DELETE FROM EMPLOYEE_BACKUP  
WHERE EMP_ID= :OLD.EMP_ID;
END;
/


========================3=========================
CREATE SEQUENCE DS INCREMENT BY 10 START WITH 1 NOCACHE NOCYCLE;

CREATE SEQUENCE DE INCREMENT BY 5 START WITH 1 NOCACHE NOCYCLE;

SHOW SEQUENCE LIST;

=====================4(B)========================

CREATE INDEX DI ON DEPARTMENT (DEPT_NAME);

================4(C)===============

SELECT * FROM EI ;

=====================4(D)========================

=========== CREATE PROCEDURE FOR DEPARTMENT=============

CREATE OR REPLACE PROCEDURE PI(
P_DEPT_ID IN DEPARTMENT.DEPT_ID%TYPE,
P_DEPT_NAME IN DEPARTMENT.DEPT_NAME%TYPE)
IS
BEGIN
INSERT INTO DEPARTMENT (DEPT_ID, DEPT_NAME)
VALUES (P_DEPT_ID, P_DEPT_NAME);
COMMIT;
END;
/

BEGIN
PI(DS.NEXTVAL, 'ADMIN');
END;
/
BEGIN
PI(DS.NEXTVAL, 'SOFTWARE');
END;
/
BEGIN
PI(DS.NEXTVAL, 'MARKETING');
END;
/

CREATE VIEW VD AS SELECT * FROM DEPARTMENT;

SELECT * FROM VD;

CREATE SYNONYM VIEW_DEPT FOR VD;

CREATE SYNONYM DDS FOR DEPARTMENT;

===================5=======================

CREATE INDEX INDEX_EMP ON EMPLOYEE (EMP_NAME);


CREATE OR REPLACE PROCEDURE PEI(
P_EMP_ID IN EMPLOYEE.EMP_ID%TYPE,
P_EMP_NAME IN EMPLOYEE.EMP_NAME%TYPE,
P_MOBILE IN EMPLOYEE.MOBILE%TYPE,
P_SALARY IN EMPLOYEE.SALARY%TYPE,
P_JOINING_DATE IN EMPLOYEE.JOINING_DATE%TYPE,
P_COUNTRY IN EMPLOYEE.COUNTRY%TYPE,
P_DEP_ID IN EMPLOYEE.DEP_ID%TYPE)
IS
BEGIN
INSERT INTO EMPLOYEE (EMP_ID, EMP_NAME, MOBILE, SALARY, JOINING_DATE,
COUNTRY, DEP_ID )
VALUES (P_EMP_ID, P_EMP_NAME, P_MOBILE, P_SALARY, P_JOINING_DATE,
P_COUNTRY, P_DEP_ID);
COMMIT;
END;
/

BEGIN
PEI(DE.NEXTVAL, 'HASIB', 017968565, 500000, '1-FEB-2019', 'BD', 1);
END;
/

BEGIN
PEI(DE.NEXTVAL, 'HUSAIN', 017968566, 50000, '9-JAN-2012', 'BD', 11);
END;
/

BEGIN
PEI(DE.NEXTVAL, 'RAMIJ', 018968565, 60000, '7-JAN-2011', 'BD', 21);
END;
/
BEGIN
PEI(DE.NEXTVAL, 'RADIB', 017962565, 505000, '7-FEB-2012', 'BD', 11);
END;
/

BEGIN
PEI(DE.NEXTVAL, 'RANA', 016968565, 508000, '7-MAR-2014', 'BD', 21);
END;
/

=============CREATE VIEW===========

CREATE VIEW EV AS SELECT * FROM EMPLOYEE;

SELECT * FROM EV;

CREATE SYNONYM ET FOR EMPLOYEE;

CREATE SYNONYM ETV FOR EV;


=====================RETRIVING DATA==========

SELECT *  FROM EV;

SELECT * FROM ET;
SELECT * FROM ETV;


=========================6================

ALTER TABLE EMPLOYEE ADD EMAIL VARCHAR2(50) UNIQUE;

UPDATE DEPARTMENT SET DEPT_NAME = 'SALES' WHERE DEPT_ID= 1;